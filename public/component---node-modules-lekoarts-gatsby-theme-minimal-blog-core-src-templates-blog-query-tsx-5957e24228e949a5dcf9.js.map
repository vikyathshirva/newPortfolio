{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx"],"names":["BlogListItem","post","showTags","mb","as","Link","to","slug","sx","fontSize","color","title","mt","a","date","Listing","posts","className","map","key","Blog","useMinimalBlogConfig","tagsPath","basePath","alignItems","justifyContent","flexFlow","variant","marginY","BlogComponent","props","allPost","data","nodes","query"],"mappings":"iJAmCeA,EAZM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,EAASC,SAAT,OACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAD,CAAOC,GAAIC,OAAMC,GAAIL,EAAKM,KAAMC,GAAI,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAC/DT,EAAKU,OAER,iBAAGH,GAAI,CAAEE,MAAO,YAAaE,GAAI,EAAGC,EAAG,CAAEH,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOR,EAAKa,SCAHC,IARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,iBAAV,eAA0Bf,gBAA1B,gBACd,uBAASM,GAAI,CAAEL,GAAI,CAAC,EAAG,EAAG,IAAMc,UAAWA,GACxCD,EAAME,KAAI,SAACjB,GAAD,OACT,YAAC,EAAD,CAAckB,IAAKlB,EAAKM,KAAMN,KAAMA,EAAMC,SAAUA,U,gLCmB3CkB,EAjBF,SAAC,GAA0B,IAAxBJ,EAAwB,EAAxBA,MAAwB,EACPK,cADO,EAC9BC,SAD8B,EACpBC,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKZ,MAAM,SACX,YAAC,IAAD,CAAMH,GAAI,CAAEgB,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAAStB,GAAG,KAAKuB,QAAQ,YAAYnB,GAAI,CAAEoB,QAAS,IAApD,+BAKF,YAAC,IAAD,CAASZ,MAAOA,EAAOR,GAAI,CAAEI,GAAI,CAAC,EAAG,QCnC5BiB,UCQA,YAAkD,IAAhBC,EAAgB,oBAErDC,EACND,EADFE,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAMf,MAAOe,EAAQE,OAAWH,KDb1BD,IAEFK,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-5957e24228e949a5dcf9.js","sourcesContent":["/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      \n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { Flex } from \"@theme-ui/components\"\nimport Layout from \"./layout\"\nimport Listing from \"./listing\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 0 }}>\n          Just some of my thoughts..\n        </Heading>\n        \n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n"],"sourceRoot":""}